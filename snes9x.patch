diff --git a/unix/unix.cpp b/unix/unix.cpp
index cc82fa5..191760e 100644
--- a/unix/unix.cpp
+++ b/unix/unix.cpp
@@ -237,6 +237,7 @@
 #include "debug.h"
 #endif
 #include "statemanager.h"
+#include "../alttp/alttp_public.h"
 
 #ifdef NETPLAY_SUPPORT
 #ifdef _DEBUG
@@ -353,6 +354,16 @@ static void InitJoysticks (void);
 static void ReadJoysticks (void);
 #endif
 
+static uint8_t * alttp_base(uint32_t addr) {
+    return S9xGetMemPointer(addr);
+}
+static int alttp_save(const char * filename) {
+    return S9xFreezeGame(filename);
+}
+static int alttp_load(const char * filename) {
+    return S9xUnfreezeGame(filename);
+}
+static struct ap_snes9x alttp;
 
 void _splitpath (const char *path, char *drive, char *dir, char *fname, char *ext)
 {
@@ -1889,6 +1900,12 @@ int main (int argc, char **argv)
 	bool8	NP_Activated = Settings.NetPlay;
 #endif
 
+    alttp.base = alttp_base;
+    alttp.save = alttp_save;
+    alttp.load = alttp_load;
+    alttp.info_string_ptr = &GFX.InfoString;
+    ap_init(&alttp);
+
 	while (1)
 	{
 	#ifdef NETPLAY_SUPPORT
@@ -1933,8 +1950,13 @@ int main (int argc, char **argv)
 				rewinding = stateMan.pop();
 			else if(IPPU.TotalEmulatedFrames % unixSettings.rewindGranularity == 0)
 				stateMan.push();
-
+            
+            uint16 jpb = MovieGetJoypad(0);
+            uint16 old_jpb = jpb;
+            ap_tick(IPPU.TotalEmulatedFrames, &jpb);
+            MovieSetJoypad(0, jpb);
 			S9xMainLoop();
+            MovieSetJoypad(0, old_jpb);
 		}
 
 	#ifdef NETPLAY_SUPPORT
diff --git a/unix/Makefile.in b/unix/Makefile.in
index 7d321e8..1247df1 100644
--- a/unix/Makefile.in
+++ b/unix/Makefile.in
@@ -51,8 +51,12 @@ configure: configure.ac
 	@echo "configure is older than in-file. Run autoconf or touch configure."
 	exit 1
 
-snes9x: $(OBJECTS)
-	$(CCC) $(LDFLAGS) $(INCLUDES) -o $@ $(OBJECTS) -lm @S9XLIBS@
+../alttp/build/libalttp.a: $(wildcard ../alttp/*)
+	$(MAKE) -C ../alttp/
+
+snes9x: $(OBJECTS) ../alttp/build/libalttp.a
+
+	$(CCC) $(LDFLAGS) $(INCLUDES) -o $@ $^ $(OBJECTS) -lm @S9XLIBS@
 
 ../jma/s9x-jma.o: ../jma/s9x-jma.cpp
 	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
